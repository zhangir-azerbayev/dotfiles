// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+w",
        "command": "-workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "extension.vim_ctrl+w",
        "when": "editorTextFocus && vim.active && vim.use<C-w>"
    },
    {
        "key": "ctrl+w",
        "command": "-extension.vim_ctrl+w",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
    },
    {  
        "key": "ctrl+w",          
        "command": "workbench.action.focusActiveEditorGroup", 
        "when": "terminalFocus" 
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "sideBarFocus"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+t",
        "command": "-extension.vim_ctrl+t",
        "when": "editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "terminalFocus || !terminalFocus"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+up",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+down",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+right",
        "command": "extension.coq.stepForward",
        "when": "editorTextFocus && editorLangId == 'coq'"
    },
    {
        "key": "alt+down",
        "command": "-extension.coq.stepForward",
        "when": "editorTextFocus && editorLangId == 'coq'"
    },
    {
        "key": "ctrl+right",
        "command": "extension.coq.stepForward",
        "when": "resourceScheme == 'coq-view'"
    },
    {
        "key": "alt+down",
        "command": "-extension.coq.stepForward",
        "when": "resourceScheme == 'coq-view'"
    },
    {
        "key": "ctrl+left",
        "command": "extension.coq.stepBackward",
        "when": "editorTextFocus && editorLangId == 'coq'"
    },
    {
        "key": "alt+up",
        "command": "-extension.coq.stepBackward",
        "when": "editorTextFocus && editorLangId == 'coq'"
    },
    {
        "key": "ctrl+left",
        "command": "extension.coq.stepBackward",
        "when": "resourceScheme == 'coq-view'"
    },
    {
        "key": "alt+up",
        "command": "-extension.coq.stepBackward",
        "when": "resourceScheme == 'coq-view'"
    }
]